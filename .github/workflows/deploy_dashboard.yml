# GitHub Actions workflow for NIFTY 50 web dashboard deployment
name: Deploy NIFTY 50 Dashboard

on:
  schedule:
    # Run every weekday at 9:30 AM IST (4:00 AM UTC) - after market opens
    - cron: '0 4 * * 1-5'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'templates/**'
      - '.github/workflows/**'

env:
  PYTHON_VERSION: '3.9'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Create directories
      run: |
        mkdir -p docs logs templates

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Generate dashboard
      run: |
        python -c "
        import sys
        import os
        sys.path.append('.')

        # Ensure templates directory exists
        os.makedirs('templates', exist_ok=True)

        from src.predictor import NIFTYWebPredictor
        try:
            predictor = NIFTYWebPredictor()
            predictor.run_daily_prediction()
            print('‚úÖ Dashboard generated successfully')
        except Exception as e:
            print(f'‚ùå Error: {str(e)}')
            # Generate a basic error page
            import datetime
            error_html = f'''
            <!DOCTYPE html>
            <html>
            <head>
                <title>NIFTY 50 Dashboard - Loading</title>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <style>
                    body {{ font-family: Arial; text-align: center; padding: 50px; }}
                    .loading {{ color: #666; }}
                </style>
            </head>
            <body>
                <div class="loading">
                    <h1>üîÑ NIFTY 50 Dashboard</h1>
                    <p>Updating predictions...</p>
                    <p>Last attempt: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')}</p>
                    <p><small>If this persists, the service may be temporarily unavailable.</small></p>
                </div>
            </body>
            </html>
            '''
            os.makedirs('docs', exist_ok=True)
            with open('docs/index.html', 'w') as f:
                f.write(error_html)
            print('Generated fallback page')
        "

    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30

    - name: Comment on commit (if push trigger)
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: `üöÄ Dashboard deployed successfully!\n\nüìä View live dashboard: ${{ steps.deployment.outputs.page_url }}`
          })
